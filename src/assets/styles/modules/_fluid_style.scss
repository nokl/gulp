// vwの取得
@function get_vw($size, $viewport: var(--base-size)) {
    $rate: 100 / $viewport;
    @return calc(#{$rate} * #{$size} * 1vw);
}

// %の取得
@function get_per($size, $parent: var(--base-size)) {
    @return calc(#{$size} / #{$parent} * 100%);
}

// 単位を取り、値を取得
@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

$min-vw: 320;
$max-vw: 1680;

// サイズを範囲指定
@mixin fluid-type($rules...) {
    @each $rule in $rules {
        #{nth($rule, 1)}: nth($rule, 3);
    }

    @media (max-width: #{$max-vw}px) {
        @each $rule in $rules {
            $prop: nth($rule, 1);
            $min-val: nth($rule, 2);
            $max-val: nth($rule, 3);
            #{$prop}: calc(
                #{$min-val} + #{strip-unit($max-val - $min-val)} * ((100vw - #{$min-vw}px) / #{$max-vw - $min-vw})
            );
        }
    }

    @media (max-width: #{$min-vw}px) {
        @each $rule in $rules {
            #{nth($rule, 1)}: nth($rule, 2);
        }
    }
}

// ex) @include fluid-text(24px,29px,64px,72px);
@mixin fluid-text($min-font-size, $min-line-height, $max-font-size, $max-line-height) {
    @include fluid-type(font-size $min-font-size $max-font-size, line-height $min-line-height $max-line-height);
}

@mixin fluid-type2($rules...) {
    $min: 0;
    $max: 0;

    @each $rule in $rules {
        #{nth($rule, 1)}: nth($rule, 3);
        $min: nth($rule, 4);
        $max: nth($rule, 5);
    }

    @media (max-width: #{$max}px) {
        @each $rule in $rules {
            $prop: nth($rule, 1);
            $min-val: nth($rule, 2);
            $max-val: nth($rule, 3);
            #{$prop}: calc(#{$min-val} + #{strip-unit($max-val - $min-val)} * ((100vw - #{$min}px) / #{$max - $min}));
        }
    }

    @media (max-width: #{$min}px) {
        @each $rule in $rules {
            #{nth($rule, 1)}: nth($rule, 2);
        }
    }
}
